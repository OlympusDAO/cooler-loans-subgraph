type Deactivated @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Reactivated @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DefaultLoan @entity(immutable: true) {
  id: Bytes!
  cooler: Bytes! # address
  loanID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RepayLoan @entity(immutable: true) {
  id: Bytes!
  cooler: Bytes! # address
  loanID: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RollLoan @entity(immutable: true) {
  id: Bytes!
  cooler: Bytes! # address
  loanID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# Mirrors the Loan struct in Cooler.sol
type CoolerLoan @entity(immutable: true) {
  id: Bytes! # cooler-createdBlock-loanID
  createdBlock: BigInt!
  createdTimestamp: BigInt!
  createdTransaction: Bytes!
  cooler: Bytes! # address
  loanID: BigInt! # uint256
  borrower: Bytes! # address
  amount: BigDecimal!
  unclaimed: BigDecimal!
  collateral: BigDecimal!
  expiry: BigInt!
  lender: Bytes! # address
  repayDirect: Boolean!
  hasCallback: Boolean!
  collateralToken: Bytes! # address
  debtToken: Bytes! # address
}

type CoolerLoanSnapshot @entity(immutable: true) {
  id: Bytes! # cooler-loanID-blockNumber
  cooler: Bytes! # address
  loanID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  status: String! # Active, Repaid, Defaulted
  expiry: BigInt!
  amount: BigDecimal!
  payable: BigDecimal!
  collateral: BigDecimal!
  collateralToken: Bytes! # address
  debtToken: Bytes! # address
}
